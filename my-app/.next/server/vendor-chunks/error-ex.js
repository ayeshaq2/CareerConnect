"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/error-ex";
exports.ids = ["vendor-chunks/error-ex"];
exports.modules = {

/***/ "(ssr)/./node_modules/error-ex/index.js":
/*!****************************************!*\
  !*** ./node_modules/error-ex/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar util = __webpack_require__(/*! util */ \"util\");\nvar isArrayish = __webpack_require__(/*! is-arrayish */ \"(ssr)/./node_modules/is-arrayish/index.js\");\nvar errorEx = function errorEx(name, properties) {\n    if (!name || name.constructor !== String) {\n        properties = name || {};\n        name = Error.name;\n    }\n    var errorExError = function ErrorEXError(message) {\n        if (!this) {\n            return new ErrorEXError(message);\n        }\n        message = message instanceof Error ? message.message : message || this.message;\n        Error.call(this, message);\n        Error.captureStackTrace(this, errorExError);\n        this.name = name;\n        Object.defineProperty(this, \"message\", {\n            configurable: true,\n            enumerable: false,\n            get: function() {\n                var newMessage = message.split(/\\r?\\n/g);\n                for(var key in properties){\n                    if (!properties.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var modifier = properties[key];\n                    if (\"message\" in modifier) {\n                        newMessage = modifier.message(this[key], newMessage) || newMessage;\n                        if (!isArrayish(newMessage)) {\n                            newMessage = [\n                                newMessage\n                            ];\n                        }\n                    }\n                }\n                return newMessage.join(\"\\n\");\n            },\n            set: function(v) {\n                message = v;\n            }\n        });\n        var overwrittenStack = null;\n        var stackDescriptor = Object.getOwnPropertyDescriptor(this, \"stack\");\n        var stackGetter = stackDescriptor.get;\n        var stackValue = stackDescriptor.value;\n        delete stackDescriptor.value;\n        delete stackDescriptor.writable;\n        stackDescriptor.set = function(newstack) {\n            overwrittenStack = newstack;\n        };\n        stackDescriptor.get = function() {\n            var stack = (overwrittenStack || (stackGetter ? stackGetter.call(this) : stackValue)).split(/\\r?\\n+/g);\n            // starting in Node 7, the stack builder caches the message.\n            // just replace it.\n            if (!overwrittenStack) {\n                stack[0] = this.name + \": \" + this.message;\n            }\n            var lineCount = 1;\n            for(var key in properties){\n                if (!properties.hasOwnProperty(key)) {\n                    continue;\n                }\n                var modifier = properties[key];\n                if (\"line\" in modifier) {\n                    var line = modifier.line(this[key]);\n                    if (line) {\n                        stack.splice(lineCount++, 0, \"    \" + line);\n                    }\n                }\n                if (\"stack\" in modifier) {\n                    modifier.stack(this[key], stack);\n                }\n            }\n            return stack.join(\"\\n\");\n        };\n        Object.defineProperty(this, \"stack\", stackDescriptor);\n    };\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(errorExError.prototype, Error.prototype);\n        Object.setPrototypeOf(errorExError, Error);\n    } else {\n        util.inherits(errorExError, Error);\n    }\n    return errorExError;\n};\nerrorEx.append = function(str, def) {\n    return {\n        message: function(v, message) {\n            v = v || def;\n            if (v) {\n                message[0] += \" \" + str.replace(\"%s\", v.toString());\n            }\n            return message;\n        }\n    };\n};\nerrorEx.line = function(str, def) {\n    return {\n        line: function(v) {\n            v = v || def;\n            if (v) {\n                return str.replace(\"%s\", v.toString());\n            }\n            return null;\n        }\n    };\n};\nmodule.exports = errorEx;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/error-ex/index.js\n");

/***/ })

};
;